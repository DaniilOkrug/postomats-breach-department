[{"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\index.tsx":"1","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\reactMapGL.config.ts":"2","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\store.ts":"3","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\App.tsx":"4","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\mapStyle.ts":"5","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\hooks\\redux.ts":"6","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\reducers\\user\\UserSlice.ts":"7","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\initialMapViewState.ts":"8","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\reducers\\user\\UserActionCreator.ts":"9","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapSwitch\\MapSwitch.tsx":"10","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\index.ts":"11","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\services\\UserService.ts":"12","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\icons\\ArrowRightIcon.tsx":"13","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\Sidebar.tsx":"14","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\axios\\axios.config.ts":"15","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\PdfReport\\index.ts":"16","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapGL\\index.ts":"17","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\placeTypes.ts":"18","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\DiscreteSlider\\DiscreteSlider.tsx":"19","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MultipleSelect\\MultipleSelect.tsx":"20","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\DownloadSection\\DownloadSection.tsx":"21","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\components\\DemandIndexSection\\DemandIndexSection.tsx":"22","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\components\\OpenButton\\OpenButton.tsx":"23","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapGL\\MapGL.tsx":"24","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\PdfReport\\PdfReport.tsx":"25"},{"size":487,"mtime":1667421000643,"results":"26","hashOfConfig":"27"},{"size":110,"mtime":1667180081854,"results":"28","hashOfConfig":"27"},{"size":475,"mtime":1667180081856,"results":"29","hashOfConfig":"27"},{"size":2265,"mtime":1667680344870,"results":"30","hashOfConfig":"27"},{"size":71,"mtime":1667675868676,"results":"31","hashOfConfig":"27"},{"size":281,"mtime":1667180081852,"results":"32","hashOfConfig":"27"},{"size":1649,"mtime":1667673802395,"results":"33","hashOfConfig":"27"},{"size":107,"mtime":1667675929311,"results":"34","hashOfConfig":"27"},{"size":1420,"mtime":1667673724045,"results":"35","hashOfConfig":"27"},{"size":1921,"mtime":1667675225142,"results":"36","hashOfConfig":"27"},{"size":151,"mtime":1667680344872,"results":"37","hashOfConfig":"27"},{"size":233,"mtime":1667679203656,"results":"38","hashOfConfig":"27"},{"size":580,"mtime":1667183676810,"results":"39","hashOfConfig":"27"},{"size":1829,"mtime":1667677852957,"results":"40","hashOfConfig":"27"},{"size":204,"mtime":1667679191062,"results":"41","hashOfConfig":"27"},{"size":67,"mtime":1667680344872,"results":"42","hashOfConfig":"27"},{"size":55,"mtime":1667180081851,"results":"43","hashOfConfig":"27"},{"size":944,"mtime":1667674351833,"results":"44","hashOfConfig":"27"},{"size":522,"mtime":1667675255278,"results":"45","hashOfConfig":"27"},{"size":1172,"mtime":1667621695312,"results":"46","hashOfConfig":"27"},{"size":452,"mtime":1667675243441,"results":"47","hashOfConfig":"27"},{"size":1058,"mtime":1667677836739,"results":"48","hashOfConfig":"27"},{"size":395,"mtime":1667421000635,"results":"49","hashOfConfig":"27"},{"size":1747,"mtime":1667680344871,"results":"50","hashOfConfig":"27"},{"size":686,"mtime":1667680344871,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g5szvb",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\index.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\reactMapGL.config.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\store.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\App.tsx",["105","106"],"import { FC, useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"./hooks/redux\";\r\nimport { GeoJsonLayer } from \"@deck.gl/layers/typed\";\r\nimport { HeatmapLayer } from \"@deck.gl/aggregation-layers/typed\";\r\n\r\nimport { requestData } from \"./store/reducers/user/UserActionCreator\";\r\n\r\nimport { MapGL, Sidebar } from \"./components\";\r\nimport MapSwitch from \"./components/MapSwitch/MapSwitch\";\r\n\r\nimport { mapStyle } from \"./util/mapStyle\";\r\nimport { initialMapViewState } from \"./util/initialMapViewState\";\r\n\r\nimport { Buffer } from \"buffer\";\r\nglobal.Buffer = Buffer;\r\n\r\ntype Props = {};\r\n\r\nconst App: FC<Props> = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { regions, mapState } = useAppSelector((state) => state.userReducer);\r\n\r\n  const pointsLayers: any[] = [\r\n    new GeoJsonLayer({\r\n      id: \"administries-layer\",\r\n      data: regions,\r\n      pickable: true,\r\n      stroked: true,\r\n      filled: false,\r\n      pointType: \"circle\",\r\n      lineWidthScale: 20,\r\n      lineWidthMinPixels: 1.5,\r\n      lineCapRounded: true,\r\n      lineJointRounded: true,\r\n      getLineColor: [255, 255, 0],\r\n    }),\r\n  ];\r\n\r\n  const heatmap_data = [\r\n    { COORDINATES: [36.81592, 55.48426], WEIGHT: 1 },\r\n    { COORDINATES: [37.81592, 55.78426], WEIGHT: 2 },\r\n  ];\r\n\r\n  const heatmapLayers: any[] = [\r\n    new HeatmapLayer({\r\n      id: \"heatmap-layer\",\r\n      data: heatmap_data,\r\n      getPosition: (d) => d.COORDINATES,\r\n      getWeight: (d) => d.WEIGHT,\r\n      aggregation: \"SUM\",\r\n    }),\r\n  ];\r\n\r\n  const [activeLayer, setActiveLayer] = useState<any[]>(pointsLayers);\r\n\r\n  useEffect(() => {\r\n    dispatch(requestData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switch (mapState) {\r\n      case \"Points\":\r\n        setActiveLayer(heatmapLayers);\r\n        break;\r\n\r\n      case \"Heatmap\":\r\n        setActiveLayer(pointsLayers);\r\n        break;\r\n\r\n      default:\r\n        setActiveLayer(pointsLayers);\r\n        console.error(\"Unknown layer\");\r\n    }\r\n\r\n    console.log(activeLayer);\r\n    \r\n  }, [mapState]);\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <MapSwitch />\r\n      <MapGL\r\n        initialViewState={initialMapViewState}\r\n        mapStyle={mapStyle}\r\n        layers={activeLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\mapStyle.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\hooks\\redux.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\reducers\\user\\UserSlice.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\initialMapViewState.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\store\\reducers\\user\\UserActionCreator.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapSwitch\\MapSwitch.tsx",["107","108"],"import { memo, useCallback, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMapState } from \"../../store/reducers/user/UserSlice\";\r\nimport { MapStateType } from \"../../types/mapStateTypes\";\r\n\r\nimport ArrowRightIcon from \"../icons/ArrowRightIcon\";\r\n\r\nimport \"./MapSwitch.css\";\r\n\r\nconst MapSwitch = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const switchItems = useMemo(\r\n    () => [\r\n      {\r\n        label: \"Точки\",\r\n        value: \"Points\" as MapStateType,\r\n      },\r\n      {\r\n        label: \"Сектора\",\r\n        value: \"Sectors\" as MapStateType,\r\n      },\r\n      {\r\n        label: \"Heatmap\",\r\n        value: \"Heatmap\" as MapStateType,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [activeItem, setActiveItem] = useState<{\r\n    label: string;\r\n    value: MapStateType;\r\n  }>(switchItems[0]);\r\n\r\n  const handleLeftClick = useCallback(() => {\r\n    const nextIndex = switchItems.indexOf(activeItem) - 1;\r\n\r\n    if (nextIndex < 0) {\r\n      setActiveItem(switchItems[switchItems.length - 1]);\r\n    } else {\r\n      setActiveItem(switchItems[nextIndex]);\r\n    }\r\n\r\n    dispatch(setMapState(activeItem.value));\r\n  }, [activeItem]);\r\n\r\n  const handleRightClick = useCallback(() => {\r\n    const nextIndex = switchItems.indexOf(activeItem) + 1;\r\n\r\n    if (nextIndex > switchItems.length - 1) {\r\n      setActiveItem(switchItems[0]);\r\n    } else {\r\n      setActiveItem(switchItems[nextIndex]);\r\n    }\r\n\r\n    dispatch(setMapState(activeItem.value));\r\n  }, [activeItem]);\r\n\r\n  return (\r\n    <div className=\"map-switch-container\">\r\n      <button className=\"arrow-left\" onClick={handleLeftClick}>\r\n        <ArrowRightIcon />\r\n      </button>\r\n\r\n      <div className=\"map-switch-item\">{activeItem.label}</div>\r\n\r\n      <button className=\"arrow-right\" onClick={handleRightClick}>\r\n        <ArrowRightIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MapSwitch);\r\n","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\index.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\services\\UserService.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\icons\\ArrowRightIcon.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\axios\\axios.config.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\PdfReport\\index.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapGL\\index.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\util\\placeTypes.ts",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\DiscreteSlider\\DiscreteSlider.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MultipleSelect\\MultipleSelect.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\DownloadSection\\DownloadSection.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\components\\DemandIndexSection\\DemandIndexSection.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\Sidebar\\components\\OpenButton\\OpenButton.tsx",[],"C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\MapGL\\MapGL.tsx",["109"],"import DeckGL from \"@deck.gl/react/typed\";\r\nimport { FC, useRef } from \"react\";\r\nimport Map, { MapRef } from \"react-map-gl\";\r\nimport { InitialViewStateType } from \"./types\";\r\nimport { DeckGLRef } from \"@deck.gl/react/typed\";\r\nimport FileSaver from \"file-saver\";\r\n\r\ntype Props = {\r\n  initialViewState: InitialViewStateType;\r\n  mapStyle: string;\r\n  layers: any[];\r\n};\r\n\r\nconst MapGL: FC<Props> = ({ initialViewState, mapStyle, layers }) => {\r\n  const deckRef = useRef<DeckGLRef>(null);\r\n  const mapRef = useRef<MapRef>(null);\r\n\r\n  const handleDownload = () => {\r\n    const fileName = \"Map.png\";\r\n\r\n    if (!mapRef.current || !deckRef.current) return;\r\n\r\n    const mapGL = mapRef.current.getMap();\r\n    const deck = deckRef.current.deck;\r\n\r\n    if (!mapGL || !deck) return;\r\n\r\n    const mapboxCanvas = mapGL.getCanvas();\r\n    // @ts-ignore: Unreachable code error\r\n    const deckglCanvas = deck.canvas as HTMLCanvasElement;\r\n\r\n    let merge = document.createElement(\"canvas\");\r\n    merge.width = mapboxCanvas.width;\r\n    merge.height = mapboxCanvas.height;\r\n\r\n    var context = merge.getContext(\"2d\");\r\n\r\n    if (!context) return;\r\n\r\n    deck.redraw(\"true\");\r\n    context.globalAlpha = 1.0;\r\n    context.drawImage(mapboxCanvas, 0, 0);\r\n    context.globalAlpha = 1.0;\r\n    context.drawImage(deckglCanvas, 0, 0);\r\n\r\n    merge.toBlob((blob) => {\r\n      FileSaver.saveAs(blob as Blob, fileName);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DeckGL\r\n      ref={deckRef}\r\n      initialViewState={initialViewState}\r\n      controller={true}\r\n      layers={layers}\r\n      getTooltip={({ object }) => object && object.properties.name}\r\n    >\r\n      <Map ref={mapRef} mapStyle={mapStyle} preserveDrawingBuffer={true} />\r\n    </DeckGL>\r\n  );\r\n};\r\n\r\nexport default MapGL;\r\n","C:\\Users\\Angel\\Desktop\\Repositories\\postomat-map-front\\src\\components\\PdfReport\\PdfReport.tsx",[],{"ruleId":"110","severity":1,"message":"111","line":58,"column":6,"nodeType":"112","endLine":58,"endColumn":8,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":77,"column":6,"nodeType":"112","endLine":77,"endColumn":16,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":46,"column":6,"nodeType":"112","endLine":46,"endColumn":18,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"116","line":58,"column":6,"nodeType":"112","endLine":58,"endColumn":18,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":18,"column":9,"nodeType":"121","messageId":"122","endLine":18,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has missing dependencies: 'activeLayer', 'heatmapLayers', and 'pointsLayers'. Either include them or remove the dependency array.",["124"],"React Hook useCallback has missing dependencies: 'dispatch' and 'switchItems'. Either include them or remove the dependency array.",["125"],["126"],"@typescript-eslint/no-unused-vars","'handleDownload' is assigned a value but never used.","Identifier","unusedVar",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},"Update the dependencies array to be: [activeLayer, heatmapLayers, mapState, pointsLayers]",{"range":"136","text":"137"},"Update the dependencies array to be: [activeItem, dispatch, switchItems]",{"range":"138","text":"139"},{"range":"140","text":"139"},[1655,1657],"[dispatch]",[2016,2026],"[activeLayer, heatmapLayers, mapState, pointsLayers]",[1154,1166],"[activeItem, dispatch, switchItems]",[1487,1499]]